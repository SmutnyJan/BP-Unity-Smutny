//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/PlayerInputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputSystem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputSystem"",
    ""maps"": [
        {
            ""name"": ""Cutscene"",
            ""id"": ""1bbb1f44-544a-4b6e-9dc2-37a8a8aad6b6"",
            ""actions"": [
                {
                    ""name"": ""Skip"",
                    ""type"": ""Button"",
                    ""id"": ""3fa154f0-3f9e-4146-80e0-a0a90b802f91"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1d8468df-add1-4e04-905d-da76c9383d95"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27faabdb-99df-4edc-bf80-48f4fa4c2314"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55d417e0-8e83-4e78-b6ab-c61a2c731703"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""804f2dd5-c2fa-4975-aa63-04601e17f72d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerPlatformer"",
            ""id"": ""f6044581-0bd0-49c3-86bc-83082027a9ce"",
            ""actions"": [
                {
                    ""name"": ""Horizontal"",
                    ""type"": ""Value"",
                    ""id"": ""466adcd1-4f71-4493-afe3-434c0c3bf074"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""151cf996-4769-4b35-a703-f51abb64e4d4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""10cf7918-edc6-405f-a15e-afe4c414022a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DisplayInventory"",
                    ""type"": ""Button"",
                    ""id"": ""793e6511-a843-47a1-a8a0-bd0b74ee463a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItem"",
                    ""type"": ""Button"",
                    ""id"": ""5facb04f-14b2-4441-85c7-e6cc8ea79e1a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DisplayMenu"",
                    ""type"": ""Button"",
                    ""id"": ""85ef4fa7-abc3-486e-becb-8a3ad16c40f8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DisplaySeasonInfo"",
                    ""type"": ""Button"",
                    ""id"": ""3ea8cf15-ef2d-4af6-b5d2-d29d548139f6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d18bed15-238a-4673-b0ac-d1a95772f63d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""77ae8b15-239b-445a-8a21-8f0336a6210f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4d0e8815-7125-4012-a2d1-80ccc9f80081"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""150085fa-7fe6-4089-8436-1659016abe2a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""88a01696-2c38-4f2a-9d3c-f256c9ab3f15"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7b11df4a-7e59-4657-9f4f-3322b51aab0b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8348752a-d2db-4910-8c6c-b147089ff342"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DisplayMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18fbf5bc-f7b2-43c4-bedc-1d914b962300"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DisplaySeasonInfo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ab30a14-7341-4029-903f-8e2d6eb567a2"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DisplayInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae4a2058-17e2-4006-a5da-e5bb3a4eaed4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68aa2a7a-5c48-4d28-af78-fc3c46289f7f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e9486af-5609-4c0c-a839-cd35d14b956b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da9c8f1d-b7c8-4a16-b1c2-2944a5971a09"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a95ae35-284d-443d-a32f-878796acce17"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62df8dab-4e04-4d94-bf1b-2c7a5c9096d6"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerLobby"",
            ""id"": ""2d8aa995-afc3-4bcb-8155-e9b83d8e005f"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""58551c97-2622-4707-9afd-f9f8a1995600"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DisplayInventory"",
                    ""type"": ""Button"",
                    ""id"": ""ad67673c-af47-4ada-8f24-daab36c1d22b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DisplayMenu"",
                    ""type"": ""Button"",
                    ""id"": ""fe4a4d78-5b7a-4024-bd94-1801ed015127"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""1635be66-8934-4c8a-b4a7-b214b34d7f06"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""96421ce3-44c2-4e29-bbee-0bcc5a106e9a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b678ed8e-b1c7-492c-ac33-1526ea919068"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a50e0963-3a9e-4b87-b270-11aa5e978425"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9dee93a7-703c-444e-8fd7-f1abebd9af4a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""149bd61a-8a1a-4f31-8171-7952de33e46e"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f6e3f636-26f0-4bc6-a7ef-55571e38f02b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""11d35608-3df8-4da2-91f6-edf70ad7702d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""273e01e8-3e6b-41e0-bc74-1b11a519fdac"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""93502899-76af-4e3f-a932-4bfec45eb475"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8a7cd567-a7bb-45b3-bcf3-bd42cb42216b"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DisplayInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e0dbadd-fe77-4b17-9950-e22c0ca0ffc5"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DisplayMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Cutscene
        m_Cutscene = asset.FindActionMap("Cutscene", throwIfNotFound: true);
        m_Cutscene_Skip = m_Cutscene.FindAction("Skip", throwIfNotFound: true);
        // PlayerPlatformer
        m_PlayerPlatformer = asset.FindActionMap("PlayerPlatformer", throwIfNotFound: true);
        m_PlayerPlatformer_Horizontal = m_PlayerPlatformer.FindAction("Horizontal", throwIfNotFound: true);
        m_PlayerPlatformer_Jump = m_PlayerPlatformer.FindAction("Jump", throwIfNotFound: true);
        m_PlayerPlatformer_Down = m_PlayerPlatformer.FindAction("Down", throwIfNotFound: true);
        m_PlayerPlatformer_DisplayInventory = m_PlayerPlatformer.FindAction("DisplayInventory", throwIfNotFound: true);
        m_PlayerPlatformer_UseItem = m_PlayerPlatformer.FindAction("UseItem", throwIfNotFound: true);
        m_PlayerPlatformer_DisplayMenu = m_PlayerPlatformer.FindAction("DisplayMenu", throwIfNotFound: true);
        m_PlayerPlatformer_DisplaySeasonInfo = m_PlayerPlatformer.FindAction("DisplaySeasonInfo", throwIfNotFound: true);
        // PlayerLobby
        m_PlayerLobby = asset.FindActionMap("PlayerLobby", throwIfNotFound: true);
        m_PlayerLobby_Movement = m_PlayerLobby.FindAction("Movement", throwIfNotFound: true);
        m_PlayerLobby_DisplayInventory = m_PlayerLobby.FindAction("DisplayInventory", throwIfNotFound: true);
        m_PlayerLobby_DisplayMenu = m_PlayerLobby.FindAction("DisplayMenu", throwIfNotFound: true);
    }

    ~@PlayerInputSystem()
    {
        UnityEngine.Debug.Assert(!m_Cutscene.enabled, "This will cause a leak and performance issues, PlayerInputSystem.Cutscene.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerPlatformer.enabled, "This will cause a leak and performance issues, PlayerInputSystem.PlayerPlatformer.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerLobby.enabled, "This will cause a leak and performance issues, PlayerInputSystem.PlayerLobby.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Cutscene
    private readonly InputActionMap m_Cutscene;
    private List<ICutsceneActions> m_CutsceneActionsCallbackInterfaces = new List<ICutsceneActions>();
    private readonly InputAction m_Cutscene_Skip;
    public struct CutsceneActions
    {
        private @PlayerInputSystem m_Wrapper;
        public CutsceneActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Skip => m_Wrapper.m_Cutscene_Skip;
        public InputActionMap Get() { return m_Wrapper.m_Cutscene; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CutsceneActions set) { return set.Get(); }
        public void AddCallbacks(ICutsceneActions instance)
        {
            if (instance == null || m_Wrapper.m_CutsceneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CutsceneActionsCallbackInterfaces.Add(instance);
            @Skip.started += instance.OnSkip;
            @Skip.performed += instance.OnSkip;
            @Skip.canceled += instance.OnSkip;
        }

        private void UnregisterCallbacks(ICutsceneActions instance)
        {
            @Skip.started -= instance.OnSkip;
            @Skip.performed -= instance.OnSkip;
            @Skip.canceled -= instance.OnSkip;
        }

        public void RemoveCallbacks(ICutsceneActions instance)
        {
            if (m_Wrapper.m_CutsceneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICutsceneActions instance)
        {
            foreach (var item in m_Wrapper.m_CutsceneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CutsceneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CutsceneActions @Cutscene => new CutsceneActions(this);

    // PlayerPlatformer
    private readonly InputActionMap m_PlayerPlatformer;
    private List<IPlayerPlatformerActions> m_PlayerPlatformerActionsCallbackInterfaces = new List<IPlayerPlatformerActions>();
    private readonly InputAction m_PlayerPlatformer_Horizontal;
    private readonly InputAction m_PlayerPlatformer_Jump;
    private readonly InputAction m_PlayerPlatformer_Down;
    private readonly InputAction m_PlayerPlatformer_DisplayInventory;
    private readonly InputAction m_PlayerPlatformer_UseItem;
    private readonly InputAction m_PlayerPlatformer_DisplayMenu;
    private readonly InputAction m_PlayerPlatformer_DisplaySeasonInfo;
    public struct PlayerPlatformerActions
    {
        private @PlayerInputSystem m_Wrapper;
        public PlayerPlatformerActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Horizontal => m_Wrapper.m_PlayerPlatformer_Horizontal;
        public InputAction @Jump => m_Wrapper.m_PlayerPlatformer_Jump;
        public InputAction @Down => m_Wrapper.m_PlayerPlatformer_Down;
        public InputAction @DisplayInventory => m_Wrapper.m_PlayerPlatformer_DisplayInventory;
        public InputAction @UseItem => m_Wrapper.m_PlayerPlatformer_UseItem;
        public InputAction @DisplayMenu => m_Wrapper.m_PlayerPlatformer_DisplayMenu;
        public InputAction @DisplaySeasonInfo => m_Wrapper.m_PlayerPlatformer_DisplaySeasonInfo;
        public InputActionMap Get() { return m_Wrapper.m_PlayerPlatformer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerPlatformerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerPlatformerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerPlatformerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerPlatformerActionsCallbackInterfaces.Add(instance);
            @Horizontal.started += instance.OnHorizontal;
            @Horizontal.performed += instance.OnHorizontal;
            @Horizontal.canceled += instance.OnHorizontal;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Down.started += instance.OnDown;
            @Down.performed += instance.OnDown;
            @Down.canceled += instance.OnDown;
            @DisplayInventory.started += instance.OnDisplayInventory;
            @DisplayInventory.performed += instance.OnDisplayInventory;
            @DisplayInventory.canceled += instance.OnDisplayInventory;
            @UseItem.started += instance.OnUseItem;
            @UseItem.performed += instance.OnUseItem;
            @UseItem.canceled += instance.OnUseItem;
            @DisplayMenu.started += instance.OnDisplayMenu;
            @DisplayMenu.performed += instance.OnDisplayMenu;
            @DisplayMenu.canceled += instance.OnDisplayMenu;
            @DisplaySeasonInfo.started += instance.OnDisplaySeasonInfo;
            @DisplaySeasonInfo.performed += instance.OnDisplaySeasonInfo;
            @DisplaySeasonInfo.canceled += instance.OnDisplaySeasonInfo;
        }

        private void UnregisterCallbacks(IPlayerPlatformerActions instance)
        {
            @Horizontal.started -= instance.OnHorizontal;
            @Horizontal.performed -= instance.OnHorizontal;
            @Horizontal.canceled -= instance.OnHorizontal;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Down.started -= instance.OnDown;
            @Down.performed -= instance.OnDown;
            @Down.canceled -= instance.OnDown;
            @DisplayInventory.started -= instance.OnDisplayInventory;
            @DisplayInventory.performed -= instance.OnDisplayInventory;
            @DisplayInventory.canceled -= instance.OnDisplayInventory;
            @UseItem.started -= instance.OnUseItem;
            @UseItem.performed -= instance.OnUseItem;
            @UseItem.canceled -= instance.OnUseItem;
            @DisplayMenu.started -= instance.OnDisplayMenu;
            @DisplayMenu.performed -= instance.OnDisplayMenu;
            @DisplayMenu.canceled -= instance.OnDisplayMenu;
            @DisplaySeasonInfo.started -= instance.OnDisplaySeasonInfo;
            @DisplaySeasonInfo.performed -= instance.OnDisplaySeasonInfo;
            @DisplaySeasonInfo.canceled -= instance.OnDisplaySeasonInfo;
        }

        public void RemoveCallbacks(IPlayerPlatformerActions instance)
        {
            if (m_Wrapper.m_PlayerPlatformerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerPlatformerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerPlatformerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerPlatformerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerPlatformerActions @PlayerPlatformer => new PlayerPlatformerActions(this);

    // PlayerLobby
    private readonly InputActionMap m_PlayerLobby;
    private List<IPlayerLobbyActions> m_PlayerLobbyActionsCallbackInterfaces = new List<IPlayerLobbyActions>();
    private readonly InputAction m_PlayerLobby_Movement;
    private readonly InputAction m_PlayerLobby_DisplayInventory;
    private readonly InputAction m_PlayerLobby_DisplayMenu;
    public struct PlayerLobbyActions
    {
        private @PlayerInputSystem m_Wrapper;
        public PlayerLobbyActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerLobby_Movement;
        public InputAction @DisplayInventory => m_Wrapper.m_PlayerLobby_DisplayInventory;
        public InputAction @DisplayMenu => m_Wrapper.m_PlayerLobby_DisplayMenu;
        public InputActionMap Get() { return m_Wrapper.m_PlayerLobby; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerLobbyActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerLobbyActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerLobbyActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerLobbyActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @DisplayInventory.started += instance.OnDisplayInventory;
            @DisplayInventory.performed += instance.OnDisplayInventory;
            @DisplayInventory.canceled += instance.OnDisplayInventory;
            @DisplayMenu.started += instance.OnDisplayMenu;
            @DisplayMenu.performed += instance.OnDisplayMenu;
            @DisplayMenu.canceled += instance.OnDisplayMenu;
        }

        private void UnregisterCallbacks(IPlayerLobbyActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @DisplayInventory.started -= instance.OnDisplayInventory;
            @DisplayInventory.performed -= instance.OnDisplayInventory;
            @DisplayInventory.canceled -= instance.OnDisplayInventory;
            @DisplayMenu.started -= instance.OnDisplayMenu;
            @DisplayMenu.performed -= instance.OnDisplayMenu;
            @DisplayMenu.canceled -= instance.OnDisplayMenu;
        }

        public void RemoveCallbacks(IPlayerLobbyActions instance)
        {
            if (m_Wrapper.m_PlayerLobbyActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerLobbyActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerLobbyActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerLobbyActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerLobbyActions @PlayerLobby => new PlayerLobbyActions(this);
    public interface ICutsceneActions
    {
        void OnSkip(InputAction.CallbackContext context);
    }
    public interface IPlayerPlatformerActions
    {
        void OnHorizontal(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnDisplayInventory(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
        void OnDisplayMenu(InputAction.CallbackContext context);
        void OnDisplaySeasonInfo(InputAction.CallbackContext context);
    }
    public interface IPlayerLobbyActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnDisplayInventory(InputAction.CallbackContext context);
        void OnDisplayMenu(InputAction.CallbackContext context);
    }
}
