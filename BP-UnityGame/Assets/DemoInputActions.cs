//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/DemoInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DemoInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DemoInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DemoInputActions"",
    ""maps"": [
        {
            ""name"": ""Demo"",
            ""id"": ""ef9902a7-a5b6-4d6d-b6f4-1eea84a88167"",
            ""actions"": [
                {
                    ""name"": ""Hi"",
                    ""type"": ""Button"",
                    ""id"": ""b2aa1ab3-c2df-44f1-8cbe-ca483932351e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HowAreYou"",
                    ""type"": ""Button"",
                    ""id"": ""2e2103d6-189f-4155-8385-4a24c74ff11c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e2747ce5-c2f3-49d6-9abc-5514481af087"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hi"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ed8254a-d8ec-4252-bf06-9ced0cd79617"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HowAreYou"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Demo
        m_Demo = asset.FindActionMap("Demo", throwIfNotFound: true);
        m_Demo_Hi = m_Demo.FindAction("Hi", throwIfNotFound: true);
        m_Demo_HowAreYou = m_Demo.FindAction("HowAreYou", throwIfNotFound: true);
    }

    ~@DemoInputActions()
    {
        UnityEngine.Debug.Assert(!m_Demo.enabled, "This will cause a leak and performance issues, DemoInputActions.Demo.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Demo
    private readonly InputActionMap m_Demo;
    private List<IDemoActions> m_DemoActionsCallbackInterfaces = new List<IDemoActions>();
    private readonly InputAction m_Demo_Hi;
    private readonly InputAction m_Demo_HowAreYou;
    public struct DemoActions
    {
        private @DemoInputActions m_Wrapper;
        public DemoActions(@DemoInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Hi => m_Wrapper.m_Demo_Hi;
        public InputAction @HowAreYou => m_Wrapper.m_Demo_HowAreYou;
        public InputActionMap Get() { return m_Wrapper.m_Demo; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DemoActions set) { return set.Get(); }
        public void AddCallbacks(IDemoActions instance)
        {
            if (instance == null || m_Wrapper.m_DemoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DemoActionsCallbackInterfaces.Add(instance);
            @Hi.started += instance.OnHi;
            @Hi.performed += instance.OnHi;
            @Hi.canceled += instance.OnHi;
            @HowAreYou.started += instance.OnHowAreYou;
            @HowAreYou.performed += instance.OnHowAreYou;
            @HowAreYou.canceled += instance.OnHowAreYou;
        }

        private void UnregisterCallbacks(IDemoActions instance)
        {
            @Hi.started -= instance.OnHi;
            @Hi.performed -= instance.OnHi;
            @Hi.canceled -= instance.OnHi;
            @HowAreYou.started -= instance.OnHowAreYou;
            @HowAreYou.performed -= instance.OnHowAreYou;
            @HowAreYou.canceled -= instance.OnHowAreYou;
        }

        public void RemoveCallbacks(IDemoActions instance)
        {
            if (m_Wrapper.m_DemoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDemoActions instance)
        {
            foreach (var item in m_Wrapper.m_DemoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DemoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DemoActions @Demo => new DemoActions(this);
    public interface IDemoActions
    {
        void OnHi(InputAction.CallbackContext context);
        void OnHowAreYou(InputAction.CallbackContext context);
    }
}
